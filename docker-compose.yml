version: '3.8'

services:
  # Database Services
  postgres:
    image: postgres:15-alpine
    container_name: pc360-postgres
    environment:
      POSTGRES_DB: pregnancycare360
      POSTGRES_USER: pc360_user
      POSTGRES_PASSWORD: pc360_dev_password
      POSTGRES_MULTIPLE_DATABASES: patient_db,provider_db,analytics_db
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./packages/database/init:/docker-entrypoint-initdb.d
    networks:
      - pc360-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U pc360_user -d pregnancycare360"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: pc360-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - pc360-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  influxdb:
    image: influxdb:2.7-alpine
    container_name: pc360-influxdb
    environment:
      DOCKER_INFLUXDB_INIT_MODE: setup
      DOCKER_INFLUXDB_INIT_USERNAME: pc360_admin
      DOCKER_INFLUXDB_INIT_PASSWORD: pc360_influx_password
      DOCKER_INFLUXDB_INIT_ORG: pregnancycare360
      DOCKER_INFLUXDB_INIT_BUCKET: monitoring_data
      DOCKER_INFLUXDB_INIT_ADMIN_TOKEN: pc360-dev-token-12345
    ports:
      - "8086:8086"
    volumes:
      - influxdb_data:/var/lib/influxdb2
    networks:
      - pc360-network
    healthcheck:
      test: ["CMD", "influx", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Message Queue
  rabbitmq:
    image: rabbitmq:3.12-management-alpine
    container_name: pc360-rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: pc360_user
      RABBITMQ_DEFAULT_PASS: pc360_rabbitmq_password
    ports:
      - "5672:5672"
      - "15672:15672"
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    networks:
      - pc360-network
    healthcheck:
      test: ["CMD", "rabbitmq-diagnostics", "ping"]
      interval: 30s
      timeout: 10s
      retries: 5

  # API Gateway
  api-gateway:
    build:
      context: .
      dockerfile: services/api-gateway/Dockerfile
    container_name: pc360-api-gateway
    ports:
      - "3000:3000"
    environment:
      NODE_ENV: development
      PORT: 3000
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/pregnancycare360
      REDIS_URL: redis://redis:6379
      JWT_SECRET: dev-jwt-secret-key-change-in-production
      CORS_ORIGIN: http://localhost:3001,http://localhost:3002,http://localhost:3003
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/api-gateway:/app
      - /app/node_modules
    command: npm run dev

  # Patient Service
  patient-service:
    build:
      context: .
      dockerfile: services/patient-service/Dockerfile
    container_name: pc360-patient-service
    ports:
      - "3001:3001"
    environment:
      NODE_ENV: development
      PORT: 3001
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/patient_db
      REDIS_URL: redis://redis:6379
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: pc360-dev-token-12345
      INFLUXDB_ORG: pregnancycare360
      INFLUXDB_BUCKET: monitoring_data
      RABBITMQ_URL: amqp://pc360_user:pc360_rabbitmq_password@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/patient-service:/app
      - /app/node_modules
    command: npm run dev

  # Provider Service
  provider-service:
    build:
      context: .
      dockerfile: services/provider-service/Dockerfile
    container_name: pc360-provider-service
    ports:
      - "3002:3002"
    environment:
      NODE_ENV: development
      PORT: 3002
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/provider_db
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://pc360_user:pc360_rabbitmq_password@rabbitmq:5672
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/provider-service:/app
      - /app/node_modules
    command: npm run dev

  # AI/ML Service
  ai-ml-service:
    build:
      context: .
      dockerfile: services/ai-ml/Dockerfile
    container_name: pc360-ai-ml-service
    ports:
      - "8000:8000"
    environment:
      ENVIRONMENT: development
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/analytics_db
      REDIS_URL: redis://redis:6379
      INFLUXDB_URL: http://influxdb:8086
      INFLUXDB_TOKEN: pc360-dev-token-12345
      INFLUXDB_ORG: pregnancycare360
      INFLUXDB_BUCKET: monitoring_data
      RABBITMQ_URL: amqp://pc360_user:pc360_rabbitmq_password@rabbitmq:5672
      MODEL_PATH: /app/models
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      influxdb:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/ai-ml:/app
      - ai_models:/app/models
    command: uvicorn main:app --host 0.0.0.0 --port 8000 --reload

  # Notification Service
  notification-service:
    build:
      context: .
      dockerfile: services/notification-service/Dockerfile
    container_name: pc360-notification-service
    ports:
      - "3003:3003"
    environment:
      NODE_ENV: development
      PORT: 3003
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/pregnancycare360
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://pc360_user:pc360_rabbitmq_password@rabbitmq:5672
      TWILIO_ACCOUNT_SID: your_twilio_account_sid
      TWILIO_AUTH_TOKEN: your_twilio_auth_token
      SENDGRID_API_KEY: your_sendgrid_api_key
      PUSH_NOTIFICATION_KEY: your_push_notification_key
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/notification-service:/app
      - /app/node_modules
    command: npm run dev

  # Integration Service
  integration-service:
    build:
      context: .
      dockerfile: services/integration-service/Dockerfile
    container_name: pc360-integration-service
    ports:
      - "3004:3004"
    environment:
      NODE_ENV: development
      PORT: 3004
      DATABASE_URL: postgresql://pc360_user:pc360_dev_password@postgres:5432/pregnancycare360
      REDIS_URL: redis://redis:6379
      RABBITMQ_URL: amqp://pc360_user:pc360_rabbitmq_password@rabbitmq:5672
      EPIC_CLIENT_ID: your_epic_client_id
      EPIC_CLIENT_SECRET: your_epic_client_secret
      CERNER_CLIENT_ID: your_cerner_client_id
      CERNER_CLIENT_SECRET: your_cerner_client_secret
      APPLE_HEALTH_KEY: your_apple_health_key
      FITBIT_CLIENT_ID: your_fitbit_client_id
      FITBIT_CLIENT_SECRET: your_fitbit_client_secret
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
      rabbitmq:
        condition: service_healthy
    networks:
      - pc360-network
    volumes:
      - ./services/integration-service:/app
      - /app/node_modules
    command: npm run dev

  # Monitoring & Observability
  prometheus:
    image: prom/prometheus:latest
    container_name: pc360-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./infrastructure/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - pc360-network
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--web.enable-lifecycle'

  grafana:
    image: grafana/grafana:latest
    container_name: pc360-grafana
    ports:
      - "3005:3000"
    environment:
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
      - ./infrastructure/monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./infrastructure/monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - pc360-network
    depends_on:
      - prometheus

volumes:
  postgres_data:
  redis_data:
  influxdb_data:
  rabbitmq_data:
  ai_models:
  prometheus_data:
  grafana_data:

networks:
  pc360-network:
    driver: bridge